<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ebookmarket.admin.mapper.NoticeMapper">
	<!-- 검색 조건을 나타내는 쿼리 조각 -->
	<sql id="sellersearch">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND sn_title LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
			<if test="searchType == 'c'.toString()">
				AND sn_content LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
		</if>
	</sql>
	<sql id="membersearch">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND mn_title LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
			<if test="searchType == 'c'.toString()">
				AND mn_content LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
		</if>
	</sql>
	<sql id="total_list">
		<if test="searchType == null">
			and rnum between #{sizePerPage}*#{page}-9 and
			#{sizePerPage}*#{page}
		</if>
	</sql>

	<!-- 판매자회원 공지사항 등록 처리 -->
	<insert id="sellercreate">
		INSERT INTO seller_notice_tbl
		(
		sn_num,
		sn_title,
		sn_content,
		sn_writer,
		sn_attachment_url
		)
		VALUES
		(
		seller_notice_seq.NEXTVAL,
		#{sn_title},
		#{sn_content},
		#{sn_writer},
		#{sn_attachment_url}
		)
	</insert>

	<!-- 판매자회원 공지사항 목록 조회 -->
	<select id="sellerlist"
		resultType="com.ebookmarket.admin.domain.Notice"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT sn_num,
		sn_title,
		sn_content,
		sn_writer,
		sn_reg_date,
		sn_attachment_url
		FROM (select sn_num,
		sn_title,
		sn_content,
		sn_writer,
		sn_reg_date,
		sn_attachment_url,
		ROW_NUMBER() OVER(ORDER BY SN_NUM DESC)
		AS RNUM
		FROM seller_notice_tbl
		WHERE sn_num > 0 AND 1=1
		<include refid="search"></include>
		)no

		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY sn_num DESC
	</select>

	<!-- 판매자회원 공지사항 상세 조회 -->
	<select id="sellerread"
		resultType="com.ebookmarket.admin.domain.Notice">
		SELECT sn_num,
		sn_title,
		sn_content,
		sn_writer,
		sn_reg_date,
		sn_attachment_url,
		SUBSTR(sn_attachment_url, INSTR(sn_attachment_url,
		'_')+1, 30) sn_attachment_name
		FROM
		seller_notice_tbl
		WHERE sn_num =
		#{sn_num}
	</select>

	<!-- 판매자회원 공지사항 수정 처리 -->
	<update id="sellerupdate">
		UPDATE seller_notice_tbl
		SET sn_title = #{sn_title},
		sn_content = #{sn_content},
		sn_attachment_url = #{sn_attachment_url}
		WHERE sn_num = #{sn_num}
	</update>

	<!-- 판매자회원 공지사항 삭제 처리 -->
	<delete id="sellerdelete">
		DELETE FROM seller_notice_tbl
		WHERE sn_num = #{sn_num}
	</delete>

	<!-- 일반회원 공지사항 등록 처리 -->
	<insert id="membercreate">
		INSERT INTO member_notice_tbl
		(
		mn_num,
		mn_title,
		mn_content,
		mn_writer,
		mn_attachment_url
		)
		VALUES
		(
		member_notice_seq.NEXTVAL,
		#{mn_title},
		#{mn_content},
		#{mn_writer},
		#{mn_attachment_url}
		)
	</insert>

	<!-- 일반회원 공지사항 목록 조회 -->
	<select id="memberlist"
		resultType="com.ebookmarket.admin.domain.Notice">
		SELECT mn_num,
		mn_title,
		mn_content,
		mn_writer,
		mn_reg_date,
		mn_attachment_url
		FROM (select mn_num,
		mn_title,
		mn_content,
		mn_writer,
		mn_reg_date,
		mn_attachment_url,
		ROW_NUMBER() OVER(ORDER BY MN_NUM DESC)
		AS RNUM
		from member_notice_tbl
		WHERE 1=1
		<include refid="memsearch"></include>
		) no

		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY mn_num DESC,
		mn_reg_date DESC
	</select>

	<!-- 일반회원 공지사항 상세 조회 -->
	<select id="memberread"
		resultType="com.ebookmarket.admin.domain.Notice">
		SELECT mn_num,
		mn_title,
		mn_content,
		mn_writer,
		mn_reg_date,
		mn_attachment_url,
		SUBSTR(mn_attachment_url,
		INSTR(mn_attachment_url,'_')+1, 30) mn_attachment_name
		FROM
		member_notice_tbl
		WHERE mn_num =
		#{mn_num}
	</select>

	<!-- 일반회원 공지사항 수정 처리 -->
	<update id="memberupdate">
		UPDATE member_notice_tbl
		SET mn_title = #{mn_title},
		mn_content = #{mn_content},
		mn_attachment_url = #{mn_attachment_url}
		WHERE mn_num = #{mn_num}
	</update>

	<!-- 일반회원 공지사항 삭제 처리 -->
	<delete id="memberdelete">
		DELETE FROM member_notice_tbl
		WHERE mn_num = #{mn_num}
	</delete>



	<!-- 게시물 카운트 -->
	<select id="memberListCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(mn_num)
		FROM member_notice_tbl
		WHERE 1=1
		<include refid="search"></include>
		AND mn_num > 0
	</select>

	<!-- 게시물 카운트 -->
	<select id="sellerListCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(sn_num)
		FROM seller_notice_tbl
		WHERE 1=1
		<include refid="search"></include>
		AND sn_num > 0
	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'sn'.toString()">AND sn_num LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'st'.toString()">AND sn_title LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'sw'.toString()">AND sn_writer LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'stsw'.toString()">AND (wn_title LIKE '%' || #{keyword} || '%') or
				(sn_writer LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>
	<sql id="memsearch">
		<if test="searchType != null">
			<if test="searchType == 'mn'.toString()">AND mn_num LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'mt'.toString()">AND mn_title LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'mw'.toString()">AND mn_writer LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'mtmw'.toString()">AND (mn_title LIKE '%' || #{keyword} || '%') or
				(mn_writer LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>
</mapper>