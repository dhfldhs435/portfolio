<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ebookmarket.admin.mapper.UserMapper">
	<!-- 판매자회원 목록 조회 -->
	<select id="sellerlist"
		resultType="com.ebookmarket.admin.domain.User"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">

		SELECT s_num,
		s_join_date,
		s_id,
		s_name,
		s_age,
		s_email,
		s_phone,
		s_grade,
		creation_reg_cnt,
		e_sell_cnt,
		RNUM

		FROM(
		SELECT
		se.s_num,
		s_join_date,
		s_id,
		s_name,
		case when substr (s_resident_num, 7, 1) in ('1', '2') then
		trunc (months_between (sysdate,
		to_date('19'||substr(lpad(s_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		else
		trunc (months_between (sysdate,
		to_date('20'||substr(lpad(s_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		end as s_age,
		s_email,
		s_phone,
		s_grade,
		count(e_num) as
		creation_reg_cnt,
		sum(e_sell_cnt) as e_sell_cnt,
		ROW_NUMBER() OVER(ORDER
		BY SE.S_NUM DESC) AS RNUM

		FROM seller_tbl se left outer join ebook_tbl
		eb ON se.s_num = eb.s_num
		WHERE 1=1
		GROUP BY se.s_num, s_join_date,
		s_id, s_name, s_resident_num, s_email,
		s_phone, s_grade
		<include refid="search"></include>
		)no


		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY s_num DESC
	</select>

	<!-- 탈퇴한 판매자회원 목록 조회 -->
	<select id="sellerresignlist"
		resultType="com.ebookmarket.admin.domain.User"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT s_num,
		s_quit_date,
		s_id,
		s_nickname,
		s_name,
		s_age,
		s_email,
		s_phone,
		s_quit_reason
		FROM(
		SELECT st.s_num,
		s_quit_date,
		s_id,
		s_nickname,
		s_name,
		case when substr (s_resident_num, 7, 1) in ('1',
		'2') then
		trunc (months_between (sysdate,
		to_date('19'||substr(lpad(s_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		else
		trunc (months_between (sysdate,
		to_date('20'||substr(lpad(s_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		end as s_age,
		s_email,
		s_phone,
		s_quit_reason,
		ROW_NUMBER() OVER(ORDER BY ST.S_NUM DESC) AS RNUM
		FROM seller_tbl st
		INNER JOIN seller_auth sa ON st.s_num = sa.s_num
		WHERE 1=1 AND auth =
		'ROLE_QUIT'
		<include refid="search"></include>
		)no
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY
		s_quit_date
		DESC

	</select>

	<!-- 일반회원 목록 조회 -->
	<select id="memberlist"
		resultType="com.ebookmarket.admin.domain.User"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT m_num,
		m_join_date,
		m_id,
		m_name,
		m_age,
		m_mail,
		totalPayment,
		purchase_cnt,
		RNUM
		FROM(
		SELECT me.m_num,
		m_join_date,
		m_id,
		m_name,
		case
		when substr (m_resident_num, 7, 1) in ('1', '2') then
		trunc
		(months_between (sysdate,
		to_date('19'||substr(lpad(m_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		else
		trunc (months_between (sysdate,
		to_date('20'||substr(lpad(m_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		end as m_age,
		m_mail,
		sum(p_total) as totalPayment,
		count(p_num) as purchase_cnt,
		ROW_NUMBER() OVER(ORDER BY ME.M_NUM DESC)
		AS RNUM

		FROM member_tbl me left outer join purchase_tbl pu ON me.m_num
		= pu.m_num
		left outer join member_auth au on me.m_num = au.m_num
		WHERE
		1=1 and auth = 'ROLE_MEMBER'
		GROUP BY me.m_num, m_join_date, m_id,
		m_name, m_resident_num, m_mail
		<include refid="search"></include>
		)no
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY m_num DESC
	</select>

	<!-- 탈퇴한 일반회원 목록 조회 -->
	<select id="memberresignlist"
		resultType="com.ebookmarket.admin.domain.User"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">

		SELECT m_num,
		m_quit_date,
		m_id,
		m_name,
		m_age,
		m_mail,
		m_quit_reason
		FROM(
		SELECT mt.m_num,
		m_quit_date,
		m_id,
		m_name,
		case when substr
		(m_resident_num, 7, 1) in ('1', '2') then
		trunc (months_between
		(sysdate,
		to_date('19'||substr(lpad(m_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		else
		trunc (months_between (sysdate,
		to_date('20'||substr(lpad(m_resident_num,'7','0'), 0, 6),
		'YYYYMMDD'))/ 12)
		end as m_age,
		m_mail,
		m_quit_reason,
		ROW_NUMBER()
		OVER(ORDER BY MT.M_NUM DESC) AS RNUM
		FROM member_tbl mt INNER JOIN
		member_auth ma ON mt.m_num = ma.m_num
		WHERE 1=1 AND auth = 'ROLE_QUIT'
		<include refid="search"></include>
		) no
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY m_quit_date
		DESC
	</select>

	<!-- 판매자회원 등급 설정 -->
	<update id="setGrade">
		UPDATE seller_tbl
		SET s_grade = #{s_grade}
		where s_num
		= #{s_num}
	</update>

	<!-- 일반회원 탈퇴 카운트 -->
	<select id="mrlistCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(mt.m_num)
		FROM member_tbl mt INNER JOIN member_auth ma ON
		mt.m_num = ma.m_num
		WHERE 1=1 AND auth = 'ROLE_QUIT'

		<include refid="msearch"></include>
		AND mt.m_num > 0
	</select>

	<!-- 판매자 탈퇴카운트 -->
	<select id="srlistCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(st.s_num)
		FROM seller_tbl st INNER JOIN seller_auth sa ON
		st.s_num = sa.s_num
		WHERE 1=1 AND auth = 'ROLE_QUIT'
		<include refid="search"></include>
		AND st.s_num > 0
	</select>

	<!-- 게시물 카운트 -->
	<select id="mlistCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(m_num)
		FROM member_tbl
		WHERE 1=1
		<include refid="msearch"></include>
		AND m_num > 0
	</select>

	<!-- 게시물 카운트 -->
	<select id="listCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(s_num)
		FROM seller_tbl
		WHERE 1=1
		<include refid="search"></include>
		AND s_num > 0
	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND s_name LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'p'.toString()">AND s_phone LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'i'.toString()">AND s_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'ni'.toString()">AND (s_name LIKE '%' || #{keyword} || '%') or
				(s_id LIKE
				'%' || #{keyword} || '%')</if>
		</if>
	</sql>

	<sql id="msearch">
		<if test="searchType != null">
			<if test="searchType == 'a'.toString()">AND m_name LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'p'.toString()">AND m_phone LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'i'.toString()">AND m_id LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'ni'.toString()">AND (m_name LIKE '%' || #{keyword} || '%') or
				(m_id LIKE
				'%' || #{keyword} || '%')</if>
		</if>
	</sql>
</mapper>