<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ebookmarket.client.mapper.PurchaseMapper">
	<!-- 구매 등록 처리 -->
	<insert id="create">
		INSERT INTO purchase_tbl
		(
		p_num,
		m_num,
		e_num,
		p_total,
		p_download,
		p_reg_date,
		p_status,
		p_type
		)
		VALUES
		(
		purchase_seq.NEXTVAL,
		#{m_num},
		#{e_num},
		#{p_total},
		#{p_download},
		sysdate,
		'purchaseSuccess',
		'creditCard'
		)
	</insert>

	<!-- 판매수 증가 -->
	<update id="sell_cnt">
		update ebook_tbl
		set e_sell_cnt = e_sell_cnt + 1
		where
		e_num = #{e_num}
	</update>

	<!-- 다운로드 횟수 증가 -->
	<update id="download_cnt">
		update ebook_tbl
		set e_download_cnt = e_download_cnt +
		1
		where
		e_num = #{e_num}
	</update>

	<!-- 다운로드 완료 -->
	<update id="downloadComplate">
		update purchase_tbl
		set p_status =
		'purchaseConfirmation',
		p_download = 'Y'
		where
		p_num = #{p_num}
	</update>

	<!-- 평점 처리 -->
	<update id="modify">
		UPDATE ebook_tbl
		SET e_rating = e_rating +
		#{e_rating},
		e_rating_cnt = e_rating_cnt + 1

		WHERE e_num = #{e_num}
	</update>

	<!-- 평점 부여 완료 -->
	<update id="ratingComplate">
		update purchase_tbl
		set p_status =
		'ratingComplate',
		p_rating = p_rating + #{p_rating}
		where
		p_num = #{p_num}
	</update>

	<!-- 구매 상세보기 -->
	<select id="read"
		resultType="com.ebookmarket.client.domain.Purchase">
		SELECT a.p_num,
		a.m_num,
		a.p_reg_date,
		a.p_reason_refund,
		a.p_reason_refusal,
		a.p_status,
		b.e_num,
		b.e_title,
		b.e_price,
		b.e_attachment_url,
		TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')) -
		TO_DATE(a.p_reg_date) as
		elapsedDays
		FROM
		purchase_tbl a
		INNER JOIN
		ebook_tbl b
		ON a.e_num =
		b.e_num
		WHERE
		p_num =
		#{p_num}
	</select>


	<!-- 구매 목록 조회 -->
	<select id="memberDownloadList"
		resultType="com.ebookmarket.client.domain.Purchase"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT p_num,
		m_num,
		e_num,
		p_reg_date,
		p_reason_refund,
		p_reason_refusal,
		p_status,
		e_title,
		e_price,
		e_attachment_url,
		TO_DATE(TO_CHAR(SYSDATE,
		'YYYYMMDD')) -
		TO_DATE(p_reg_date) as
		elapsedDays

		FROM(
		SELECT a.p_num,
		a.m_num,
		a.e_num,
		a.p_reg_date,
		a.p_reason_refund,
		a.p_reason_refusal,
		a.p_status,
		b.e_title,
		b.e_price,
		b.e_attachment_url,
		TO_DATE(TO_CHAR(SYSDATE,
		'YYYYMMDD')) -
		TO_DATE(a.p_reg_date) as
		elapsedDays,
		ROW_NUMBER()
		OVER(ORDER BY a.p_NUM DESC) AS RNUM

		FROM
		purchase_tbl a
		INNER JOIN
		ebook_tbl b
		ON a.e_num = b.e_num
		WHERE 1=1
		<include refid="search"></include>
		) no


		WHERE
		m_num = #{m_num}
		AND RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY p_num DESC

	</select>

	<!-- 일반회원 환불내역 조회 -->
	<select id="memberRefundList"
		resultType="com.ebookmarket.client.domain.Purchase"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT p_num,
		m_num,
		p_reg_date,
		p_refund_app_date,
		p_reason_refund,
		p_reason_refusal,
		p_status,
		e_title,
		RNUM

		FROM(
		SELECT a.p_num,
		a.m_num,
		a.p_reg_date,
		a.p_refund_app_date,
		a.p_reason_refund,
		a.p_reason_refusal,
		a.p_status,
		b.e_title,
		ROW_NUMBER() OVER(ORDER BY
		a.p_NUM DESC) AS RNUM

		FROM purchase_tbl a
		INNER JOIN ebook_tbl b
		ON
		a.e_num = b.e_num
		WHERE 1=1
		<include refid="search"></include>
		) no


		WHERE
		m_num = #{m_num} and p_reason_refund is not null
		AND RNUM
		BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY p_num DESC
	</select>

	<!-- 판매자회원 판매 내역 조회 -->
	<select id="sellerSalesList"
		resultType="com.ebookmarket.client.domain.Purchase"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT p_num,
		m_num,
		p_reg_date,
		p_reason_refund,
		p_reason_refusal,
		p_refund_app_date,
		p_status,
		e_title,
		e_price,
		e_attachment_url

		FROM(
		SELECT
		p.p_num,
		m_num,
		p_reg_date,
		p_reason_refund,
		p_reason_refusal,
		p_refund_app_date,
		p_status,
		e_title,
		e_price,
		e_attachment_url,
		ROW_NUMBER() OVER(ORDER BY p.p_num DESC) AS RNUM

		FROM
		purchase_tbl p
		INNER JOIN ebook_tbl e ON
		p.e_num = e.e_num inner join
		seller_tbl s on
		e.s_num = s.s_num
		WHERE 1=1 AND s.s_num = #{s_num}
		<include refid="search"></include>
		) no



		WHERE
		RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY p_reg_date
		desc

	</select>

	<!-- 판매자회원 환불 목록 조회 -->
	<select id="refundList"
		resultType="com.ebookmarket.client.domain.Purchase"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT p_num,
		m_num,
		p_reg_date,
		p_reason_refund,
		p_reason_refusal,
		p_refund_app_date,
		p_status,
		e_title,
		e_price,
		e_attachment_url
		FROM(
		SELECT
		p.p_num,
		m_num,
		p_reg_date,
		p_reason_refund,
		p_reason_refusal,
		p_refund_app_date,
		p_status,
		e_title,
		e_price,
		e_attachment_url,
		ROW_NUMBER() OVER(ORDER BY
		p.p_num DESC) AS RNUM

		FROM
		purchase_tbl p
		INNER JOIN
		ebook_tbl e ON
		p.e_num =
		e.e_num inner join
		seller_tbl s on
		e.s_num = s.s_num
		WHERE 1=1 AND s.s_num = #{s_num} and
		p_reason_refund
		is not null
		<include refid="search"></include>

		) no


		WHERE
		RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY p_reg_date
		desc

	</select>

	<!-- 환불신청 처리 -->
	<update id="refundApply">

		update purchase_tbl

		set
		p_reason_refund =
		#{p_reason_refund},
		p_status = 'refundApply',
		P_REFUND_APP_DATE =
		sysdate

		where
		p_num = #{p_num}

	</update>

	<!-- 환불신청 거절처리 -->
	<update id="refundProcess">

		update purchase_tbl

		set
		p_reason_refusal =
		#{p_reason_refusal},
		p_status = 's_refuse'

		where
		p_num = #{p_num}

	</update>

	<!-- 환불신청 승인처리 -->
	<update id="refundApproval">

		update purchase_tbl

		set
		p_status = 'refundApproval',
		P_REFUND_com_DATE =
		sysdate

		where
		p_num = #{p_num}

	</update>

	<!-- 환불 횟수 증가 -->
	<update id="refund_cnt">
		update ebook_tbl
		set e_refund_cnt = e_refund_cnt + 1

		where
		e_num = #{e_num}
	</update>
	<!-- 게시물 카운트 -->
	<select id="listCount" resultType="int"
		parameterType="com.ebookmarket.common.domain.SearchCriteria">
		SELECT COUNT(p_num)
		FROM purchase_tbl a
		INNER JOIN ebook_tbl b
		ON a.e_num
		= b.e_num
		WHERE 1=1 and
		p_reason_refund
		is not null
		<include refid="search"></include>
		AND p_num > 0
	</select>

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND e_TITLE LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'p'.toString()">AND p_num LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'tp'.toString()">AND (e_TITLE LIKE '%' || #{keyword} || '%') or (p_num
				LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>

</mapper>